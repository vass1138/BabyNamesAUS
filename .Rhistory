read_pdf_file <- function(myfilename) {
# returns a list for each page
mytable <- extract_tables(
myfilename,
guess = FALSE
)
# testing code on first element in list
dt <- as_tibble(mytable[[1]])
# extract the year from the title and append new column
title <- dt[1,]
dt$year <- str_extract(title$V1,"\\d{4}")
dt <- dt[-1,]
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
invisible(dt)
}
set_col_names <- function(df) {
colnames(df) <- c("rank","name","count","gender","year")
invisible(df)
}
get_boy_table <- function(df) {
df1 <- df %>%
select(rank1,name.b1,count.b1)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.b2,count.b2)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "MALE"
db <- set_col_names(db)
invisible(db)
}
get_girl_table <- function(df) {
df1 <- df %>%
select(rank1,name.g1,count.g1)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.g2,count.g2)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "FEMALE"
db <- set_col_names(db)
invisible(db)
}
get_long_table <- function(df) {
this_heading <- append(heading_left,heading_right)
df <- df %>%
separate(V1,this_heading)
db <- get_boy_table(df)
dg <- get_girl_table(df)
dz <- rbind(db,dg)
invisible(dz)
}
#
# MAIN
#
csv_file_list <-list.files(
path = "nsw-baby-names",
pattern = "*.pdf",
full.names = T
)
file_name <- csv_file_list[1]
dt <- read_pdf_file(file_name)
read_pdf_file <- function(myfilename) {
# returns a list for each page
mytable <- extract_tables(
myfilename,
guess = FALSE
)
# testing code on first element in list
dt <- as_tibble(mytable[[1]])
# extract the year from the title and append new column
title <- dt[1,]
this_year <- str_extract(title$V1,"\\d{4}")
dt <- dt[-1,]
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
invisible(dt)
}
dt <- read_pdf_file(file_name)
dt
read_pdf_file <- function(myfilename) {
# returns a list for each page
mytable <- extract_tables(
myfilename,
guess = FALSE
)
# testing code on first element in list
dt <- as_tibble(mytable[[1]])
# extract the year from the title and append new column
title <- dt[1,]
this_year <- str_extract(title$V1,"\\d{4}")
dt$year <- this_year
dt <- dt[-1,]
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
invisible(dt)
}
dt <- read_pdf_file(file_name)
dt
dn <- get_long_table(dt)
read_pdf_file <- function(myfilename) {
# returns a list for each page
mytable <- extract_tables(
myfilename,
guess = FALSE
)
# testing code on first element in list
dt <- as_tibble(mytable[[1]])
# extract the year from the title and append new column
title <- dt[1,]
this_year <- str_extract(title$V1,"\\d{4}")
dt <- dt[-1,]
assign("CURRENT_YEAR", this_year, envir = .GlobalEnv)
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
invisible(dt)
}
set_col_names <- function(df) {
colnames(df) <- c("rank","name","count","gender")
invisible(df)
}
dt <- read_pdf_file(file_name)
dn <- get_long_table(dt)
dn$year <- CURRENT_YEAR
da <- NULL
dt <- read_pdf_file(file_name)
dt <- get_long_table(dt)
dt$year <- CURRENT_YEAR
da <- bind_rows(da,dt)
da <- NULL
for (file_name in csv_file_list) {
dt <- read_pdf_file(file_name)
dt <- get_long_table(dt)
dt$year <- CURRENT_YEAR
da <- bind_rows(da,dt)
}
rm(list = ls(all = TRUE))
# install.packages("tabulizer")
library(here)
getwd()
library(tidyverse)
library(tabulizer)
CURRENT_YEAR <- 1970
heading_left <- c(
"rank1",
"name.b1",
"count.b1",
"name.g1",
"count.g1"
)
heading_right <- c(
"rank2",
"name.b2",
"count.b2",
"name.g2",
"count.g2"
)
#
# FUNCTIONS
#
read_pdf_file <- function(myfilename) {
# returns a list for each page
tablelist <- extract_tables(
myfilename,
guess = FALSE
)
da <- NULL
for (this_table in tablelist) {
# testing code on first element in list
dt <- as_tibble(this_table)
# extract the year from the title and append new column
title <- dt[1,]
this_year <- str_extract(title$V1,"\\d{4}")
dt <- dt[-1,]
# assign("CURRENT_YEAR", this_year, envir = .GlobalEnv)
dt$year <- this_year
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
# append result
da <- bind_row(da,dt)
}
invisible(da)
}
set_col_names <- function(df) {
colnames(df) <- c("rank","name","count","year","gender")
invisible(df)
}
get_boy_table <- function(df) {
df1 <- df %>%
select(rank1,name.b1,count.b1,year)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.b2,count.b2,year)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "MALE"
db <- set_col_names(db)
invisible(db)
}
get_girl_table <- function(df) {
df1 <- df %>%
select(rank1,name.g1,count.g1,year)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.g2,count.g2,year)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "FEMALE"
db <- set_col_names(db)
invisible(db)
}
get_long_table <- function(df) {
this_heading <- append(heading_left,heading_right)
dh <- df %>%
separate(V1,this_heading)
dh$year <- df$year
db <- get_boy_table(dh)
dg <- get_girl_table(dh)
dz <- rbind(db,dg)
invisible(dz)
}
#
# MAIN
#
csv_file_list <-list.files(
path = "nsw-baby-names",
pattern = "*.pdf",
full.names = T
)
da <- NULL
for (file_name in csv_file_list) {
dt <- read_pdf_file(file_name)
dt <- get_long_table(dt)
da <- bind_rows(da,dt)
}
rm(list = ls(all = TRUE))
# install.packages("tabulizer")
library(here)
getwd()
library(tidyverse)
library(tabulizer)
CURRENT_YEAR <- 1970
heading_left <- c(
"rank1",
"name.b1",
"count.b1",
"name.g1",
"count.g1"
)
heading_right <- c(
"rank2",
"name.b2",
"count.b2",
"name.g2",
"count.g2"
)
#
# FUNCTIONS
#
read_pdf_file <- function(myfilename) {
# returns a list for each page
tablelist <- extract_tables(
myfilename,
guess = FALSE
)
da <- NULL
for (this_table in tablelist) {
# testing code on first element in list
dt <- as_tibble(this_table)
# extract the year from the title and append new column
title <- dt[1,]
this_year <- str_extract(title$V1,"\\d{4}")
dt <- dt[-1,]
# assign("CURRENT_YEAR", this_year, envir = .GlobalEnv)
dt$year <- this_year
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
# append result
da <- rbind(da,dt)
}
invisible(da)
}
set_col_names <- function(df) {
colnames(df) <- c("rank","name","count","year","gender")
invisible(df)
}
get_boy_table <- function(df) {
df1 <- df %>%
select(rank1,name.b1,count.b1,year)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.b2,count.b2,year)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "MALE"
db <- set_col_names(db)
invisible(db)
}
get_girl_table <- function(df) {
df1 <- df %>%
select(rank1,name.g1,count.g1,year)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.g2,count.g2,year)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "FEMALE"
db <- set_col_names(db)
invisible(db)
}
get_long_table <- function(df) {
this_heading <- append(heading_left,heading_right)
dh <- df %>%
separate(V1,this_heading)
dh$year <- df$year
db <- get_boy_table(dh)
dg <- get_girl_table(dh)
dz <- rbind(db,dg)
invisible(dz)
}
#
# MAIN
#
csv_file_list <-list.files(
path = "nsw-baby-names",
pattern = "*.pdf",
full.names = T
)
da <- NULL
for (file_name in csv_file_list) {
dt <- read_pdf_file(file_name)
dt <- get_long_table(dt)
da <- rbind(da,dt)
}
str(da)
da$rank <- as.integer(da$rank)
da$count <- as.integer(da$count)
da$year <- as.integer(da$year)
da[da$year==NA,]
rm(list = ls(all = TRUE))
# install.packages("tabulizer")
library(here)
getwd()
library(tidyverse)
library(tabulizer)
heading_left <- c(
"rank1",
"name.b1",
"count.b1",
"name.g1",
"count.g1"
)
heading_right <- c(
"rank2",
"name.b2",
"count.b2",
"name.g2",
"count.g2"
)
#
# FUNCTIONS
#
read_pdf_file <- function(myfilename) {
# returns a list for each page
tablelist <- extract_tables(
myfilename,
guess = FALSE
)
da <- NULL
for (this_table in tablelist) {
# testing code on first element in list
dt <- as_tibble(this_table)
# extract the year from the title and append new column
title <- dt[1,]
this_year <- str_extract(title$V1,"\\d{4}")
dt <- dt[-1,]
# assign("CURRENT_YEAR", this_year, envir = .GlobalEnv)
dt$year <- this_year
# table heading row
heading <- dt[1,]
dt<- dt[-1,]
# remove page counter at bottom
dt<- head(dt,-1)
# append result
da <- rbind(da,dt)
}
invisible(da)
}
set_col_names <- function(df) {
colnames(df) <- c("rank","name","count","year","gender")
invisible(df)
}
get_boy_table <- function(df) {
df1 <- df %>%
select(rank1,name.b1,count.b1,year)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.b2,count.b2,year)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "MALE"
db <- set_col_names(db)
invisible(db)
}
get_girl_table <- function(df) {
df1 <- df %>%
select(rank1,name.g1,count.g1,year)
this_names <- colnames(df1)
df2 <- df %>%
select(rank2,name.g2,count.g2,year)
colnames(df2) <- this_names
db <- rbind(df1,df2)
db$Gender <- "FEMALE"
db <- set_col_names(db)
invisible(db)
}
get_long_table <- function(df) {
this_heading <- append(heading_left,heading_right)
dh <- df %>%
separate(V1,this_heading)
dh$year <- df$year
db <- get_boy_table(dh)
dg <- get_girl_table(dh)
dz <- rbind(db,dg)
invisible(dz)
}
#
# MAIN
#
csv_file_list <-list.files(
path = "nsw-baby-names",
pattern = "*.pdf",
full.names = T
)
da <- NULL
for (file_name in csv_file_list) {
dt <- read_pdf_file(file_name)
dt <- get_long_table(dt)
da <- rbind(da,dt)
}
da[da$year==NA,]
head(da)
da %>% filter(name == "Peter")
da$rank <- as.integer(da$rank)
da %>% filter(name == "Peter")
da$count <- as.integer(da$count)
da %>% filter(name == "Peter")
da %>% filter(name == "Peter",is.na(count)==TRUE)
da %>% filter(name == "Peter",is.na(count))
da$gender <- as.factor(da$gender)
da %>%
filter(name=="Karen",gender="FEMALE") %>%
ggplot(da,aes(year,count)) +
geom_point()
da %>%
filter(name=="Karen",gender=="FEMALE") %>%
ggplot(da,aes(year,count)) +
geom_point()
da %>%
filter(name=="Karen",gender=="FEMALE") %>%
ggplot(aes(year,count)) +
geom_point()
str(da)
da$year <- as.integer(da$year)
str(da)
da %>%
filter(name=="Karen",gender=="FEMALE") %>%
ggplot(aes(year,count)) +
geom_point()
da %>%
filter(name=="Gerhardt",gender=="MALE") %>%
ggplot(aes(year,count)) +
geom_point()
da %>%
filter(name=="Gerhart",gender=="MALE") %>%
ggplot(aes(year,count)) +
geom_point()
da %>%
filter(name=="Emanuel",gender=="MALE") %>%
ggplot(aes(year,count)) +
geom_point()
da %>%
filter(name=="Anthony",gender=="MALE") %>%
ggplot(aes(year,count)) +
geom_point()
da %>%
filter(name=="Steven",gender=="MALE") %>%
ggplot(aes(year,count)) +
geom_point()
da %>%
filter(name=="Natalie",gender=="FEMALE") %>%
ggplot(aes(year,count)) +
geom_point()
